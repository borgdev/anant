{
  "Hypergraph": {
    "existing": [
      "add_edge",
      "add_edge_properties",
      "add_node",
      "add_node_properties",
      "add_nodes_from",
      "adjacency_matrix",
      "all_shortest_paths",
      "betweenness_centrality",
      "clear",
      "clear_global_cache",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "connected_components",
      "copy",
      "density",
      "diameter",
      "draw",
      "dual",
      "dual_graph",
      "edge_cardinality",
      "edge_cardinality_sequence",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "eigenvector_centrality",
      "from_dataframe",
      "from_dict",
      "from_file",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "get_edge_nodes",
      "get_edge_size",
      "get_layout_coordinates",
      "get_multiple_edge_nodes",
      "get_multiple_node_degrees",
      "get_multiple_node_edges",
      "get_node_degree",
      "get_node_edges",
      "get_performance_stats",
      "has_edge",
      "has_node",
      "hits",
      "incidence_matrix",
      "induced_subgraph",
      "intersection_graph",
      "is_connected",
      "is_connected_graph",
      "is_uniform",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "line_graph",
      "max_flow",
      "min_cut",
      "minimum_spanning_tree",
      "modularity",
      "neighbors",
      "node_cardinality",
      "node_degree",
      "node_degree_sequence",
      "node_induced_subgraph",
      "order",
      "pagerank",
      "pos",
      "predecessors",
      "print_performance_report",
      "random_walk",
      "rank",
      "remove_edge",
      "remove_node",
      "s_line_graph",
      "save",
      "shortest_path",
      "size",
      "spectral_clustering",
      "subgraph",
      "subhypergraph",
      "successors",
      "to_dataframe",
      "to_dict",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx",
      "uniform_rank"
    ],
    "missing": [
      "edges",
      "nodes",
      "num_edges",
      "num_nodes"
    ],
    "expected": [
      "add_edge",
      "add_node",
      "adjacency_matrix",
      "all_shortest_paths",
      "betweenness_centrality",
      "clear",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "connected_components",
      "copy",
      "diameter",
      "draw",
      "dual_graph",
      "edge_cardinality",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "edges",
      "eigenvector_centrality",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "get_layout_coordinates",
      "has_edge",
      "has_node",
      "hits",
      "incidence_matrix",
      "induced_subgraph",
      "intersection_graph",
      "is_connected",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "line_graph",
      "max_flow",
      "min_cut",
      "minimum_spanning_tree",
      "modularity",
      "neighbors",
      "node_degree",
      "nodes",
      "num_edges",
      "num_nodes",
      "pagerank",
      "pos",
      "predecessors",
      "remove_edge",
      "remove_node",
      "shortest_path",
      "spectral_clustering",
      "subgraph",
      "successors",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx"
    ]
  },
  "KnowledgeGraph": {
    "existing": [
      "add_edge",
      "add_edge_properties",
      "add_entity",
      "add_namespace",
      "add_node",
      "add_node_properties",
      "add_nodes_from",
      "add_ontology",
      "add_provenance",
      "add_relationship",
      "add_temporal_fact",
      "adjacency_matrix",
      "all_shortest_paths",
      "betweenness_centrality",
      "class_hierarchy",
      "clear",
      "clear_global_cache",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "compress_uri",
      "concept_extraction",
      "connected_components",
      "copy",
      "density",
      "diameter",
      "draw",
      "dual",
      "dual_graph",
      "edge_cardinality",
      "edge_cardinality_sequence",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "eigenvector_centrality",
      "embedding_based_reasoning",
      "entity_embeddings",
      "entity_linking",
      "entity_neighborhood",
      "expand_uri",
      "extract_concepts",
      "extract_entities",
      "extract_ontology",
      "extract_relations",
      "extract_triples",
      "from_dataframe",
      "from_dict",
      "from_file",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "get_all_entity_types",
      "get_all_relationship_types",
      "get_edge_nodes",
      "get_edge_size",
      "get_entities_by_type",
      "get_entity",
      "get_entity_type",
      "get_layout_coordinates",
      "get_multiple_edge_nodes",
      "get_multiple_node_degrees",
      "get_multiple_node_edges",
      "get_node_degree",
      "get_node_edges",
      "get_ontology",
      "get_performance_stats",
      "get_provenance",
      "get_relationship",
      "get_relationships_by_type",
      "get_schema",
      "get_statistics",
      "get_subgraph",
      "has_edge",
      "has_node",
      "hits",
      "incidence_matrix",
      "induced_subgraph",
      "infer_relationships",
      "intersection_graph",
      "is_connected",
      "is_connected_graph",
      "is_uniform",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "line_graph",
      "max_flow",
      "merge_knowledge_graphs",
      "min_cut",
      "minimum_spanning_tree",
      "modularity",
      "named_entity_recognition",
      "neighbors",
      "node_cardinality",
      "node_degree",
      "node_degree_sequence",
      "node_induced_subgraph",
      "order",
      "pagerank",
      "pos",
      "predecessors",
      "print_performance_report",
      "random_walk",
      "rank",
      "remove_edge",
      "remove_entity",
      "remove_node",
      "remove_relationship",
      "s_line_graph",
      "save",
      "semantic_search",
      "semantic_similarity",
      "shortest_path",
      "shortest_semantic_path",
      "size",
      "sparql_query",
      "spectral_clustering",
      "subgraph",
      "subhypergraph",
      "successors",
      "temporal_query",
      "temporal_reasoning",
      "time_based_inference",
      "to_dataframe",
      "to_dict",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx",
      "uniform_rank",
      "validate_schema"
    ],
    "missing": [
      "edges",
      "fact_confidence",
      "fact_validity_period",
      "generate_embeddings",
      "nearest_neighbors",
      "nodes",
      "num_edges",
      "num_nodes",
      "ontology_alignment",
      "ontology_reasoning",
      "pattern_matching",
      "property_hierarchy",
      "query_cypher",
      "query_sparql",
      "relation_embeddings",
      "relation_extraction",
      "relationship_patterns",
      "rule_based_inference",
      "schema_matching",
      "semantic_distance",
      "similarity_search",
      "source_attribution",
      "taxonomy_extraction",
      "track_lineage",
      "transitive_closure",
      "uncertainty_reasoning",
      "update_entity",
      "update_relationship",
      "validate_ontology",
      "vector_search"
    ],
    "expected": [
      "add_edge",
      "add_entity",
      "add_node",
      "add_ontology",
      "add_provenance",
      "add_relationship",
      "add_temporal_fact",
      "adjacency_matrix",
      "all_shortest_paths",
      "betweenness_centrality",
      "class_hierarchy",
      "clear",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "concept_extraction",
      "connected_components",
      "copy",
      "diameter",
      "draw",
      "dual_graph",
      "edge_cardinality",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "edges",
      "eigenvector_centrality",
      "embedding_based_reasoning",
      "entity_embeddings",
      "entity_linking",
      "entity_neighborhood",
      "extract_concepts",
      "extract_ontology",
      "extract_relations",
      "extract_triples",
      "fact_confidence",
      "fact_validity_period",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "generate_embeddings",
      "get_entities_by_type",
      "get_entity",
      "get_layout_coordinates",
      "get_relationship",
      "get_relationships_by_type",
      "get_schema",
      "has_edge",
      "has_node",
      "hits",
      "incidence_matrix",
      "induced_subgraph",
      "infer_relationships",
      "intersection_graph",
      "is_connected",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "line_graph",
      "max_flow",
      "min_cut",
      "minimum_spanning_tree",
      "modularity",
      "named_entity_recognition",
      "nearest_neighbors",
      "neighbors",
      "node_degree",
      "nodes",
      "num_edges",
      "num_nodes",
      "ontology_alignment",
      "ontology_reasoning",
      "pagerank",
      "pattern_matching",
      "pos",
      "predecessors",
      "property_hierarchy",
      "query_cypher",
      "query_sparql",
      "relation_embeddings",
      "relation_extraction",
      "relationship_patterns",
      "remove_edge",
      "remove_entity",
      "remove_node",
      "remove_relationship",
      "rule_based_inference",
      "schema_matching",
      "semantic_distance",
      "semantic_search",
      "semantic_similarity",
      "shortest_path",
      "shortest_semantic_path",
      "similarity_search",
      "source_attribution",
      "spectral_clustering",
      "subgraph",
      "successors",
      "taxonomy_extraction",
      "temporal_query",
      "temporal_reasoning",
      "time_based_inference",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx",
      "track_lineage",
      "transitive_closure",
      "uncertainty_reasoning",
      "update_entity",
      "update_relationship",
      "validate_ontology",
      "vector_search"
    ]
  },
  "HierarchicalKnowledgeGraph": {
    "existing": [
      "add_cross_level_relationship",
      "add_edge",
      "add_entity",
      "add_entity_to_level",
      "add_level",
      "add_node",
      "add_relationship",
      "adjacency_matrix",
      "aggregate_across_levels",
      "aggregate_query",
      "all_shortest_paths",
      "analyze_cross_level_connectivity",
      "avg_branching_factor",
      "betweenness_centrality",
      "clear",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "connected_components",
      "copy",
      "create_level",
      "detect_hierarchy_anomalies",
      "diameter",
      "find_cross_level_patterns",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "generate_hierarchy_layout",
      "get_ancestors",
      "get_children",
      "get_cross_level_relationships",
      "get_descendants",
      "get_entities_at_level",
      "get_entity_level",
      "get_hierarchy_statistics",
      "get_level_metadata",
      "get_level_subgraph",
      "get_parent",
      "has_edge",
      "has_node",
      "hierarchy_balance",
      "hierarchy_metrics",
      "max_depth",
      "merge_levels",
      "navigate_down",
      "navigate_up",
      "remove_edge",
      "remove_entity",
      "remove_node",
      "semantic_search",
      "spectral_clustering",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx"
    ],
    "missing": [
      "add_ontology",
      "add_provenance",
      "add_temporal_fact",
      "class_hierarchy",
      "concept_extraction",
      "dice_hierarchy",
      "draw",
      "drill_down_query",
      "dual_graph",
      "edge_cardinality",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "edges",
      "eigenvector_centrality",
      "embedding_based_reasoning",
      "entity_embeddings",
      "entity_linking",
      "entity_neighborhood",
      "extract_concepts",
      "extract_ontology",
      "extract_relations",
      "extract_triples",
      "fact_confidence",
      "fact_validity_period",
      "generate_embeddings",
      "get_entities_by_type",
      "get_entity",
      "get_layout_coordinates",
      "get_level",
      "get_level_entities",
      "get_relationship",
      "get_relationships_by_type",
      "get_schema",
      "get_siblings",
      "hierarchical_drawing",
      "hierarchical_inference",
      "hierarchical_path",
      "hits",
      "incidence_matrix",
      "induced_subgraph",
      "infer_relationships",
      "intersection_graph",
      "is_connected",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "level_based_positioning",
      "level_based_reasoning",
      "level_distance",
      "level_distribution",
      "line_graph",
      "max_flow",
      "min_cut",
      "minimum_spanning_tree",
      "modularity",
      "move_entity_to_level",
      "named_entity_recognition",
      "navigate_across",
      "nearest_neighbors",
      "neighbors",
      "node_degree",
      "nodes",
      "num_edges",
      "num_nodes",
      "ontology_alignment",
      "ontology_reasoning",
      "optimize_hierarchy",
      "pagerank",
      "pattern_matching",
      "pos",
      "predecessors",
      "property_hierarchy",
      "query_at_level",
      "query_cypher",
      "query_sparql",
      "radial_layout",
      "relation_embeddings",
      "relation_extraction",
      "relationship_patterns",
      "remove_level",
      "remove_relationship",
      "roll_up_query",
      "rule_based_inference",
      "schema_matching",
      "semantic_distance",
      "semantic_similarity",
      "shortest_path",
      "shortest_semantic_path",
      "similarity_search",
      "slice_hierarchy",
      "source_attribution",
      "subgraph",
      "successors",
      "taxonomy_extraction",
      "temporal_query",
      "temporal_reasoning",
      "time_based_inference",
      "track_lineage",
      "transitive_closure",
      "tree_layout",
      "uncertainty_reasoning",
      "update_entity",
      "update_relationship",
      "validate_ontology",
      "vector_search"
    ],
    "expected": [
      "add_cross_level_relationship",
      "add_edge",
      "add_entity",
      "add_entity_to_level",
      "add_level",
      "add_node",
      "add_ontology",
      "add_provenance",
      "add_relationship",
      "add_temporal_fact",
      "adjacency_matrix",
      "aggregate_across_levels",
      "aggregate_query",
      "all_shortest_paths",
      "avg_branching_factor",
      "betweenness_centrality",
      "class_hierarchy",
      "clear",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "concept_extraction",
      "connected_components",
      "copy",
      "create_level",
      "detect_hierarchy_anomalies",
      "diameter",
      "dice_hierarchy",
      "draw",
      "drill_down_query",
      "dual_graph",
      "edge_cardinality",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "edges",
      "eigenvector_centrality",
      "embedding_based_reasoning",
      "entity_embeddings",
      "entity_linking",
      "entity_neighborhood",
      "extract_concepts",
      "extract_ontology",
      "extract_relations",
      "extract_triples",
      "fact_confidence",
      "fact_validity_period",
      "find_cross_level_patterns",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "generate_embeddings",
      "generate_hierarchy_layout",
      "get_ancestors",
      "get_children",
      "get_cross_level_relationships",
      "get_descendants",
      "get_entities_at_level",
      "get_entities_by_type",
      "get_entity",
      "get_entity_level",
      "get_hierarchy_statistics",
      "get_layout_coordinates",
      "get_level",
      "get_level_entities",
      "get_parent",
      "get_relationship",
      "get_relationships_by_type",
      "get_schema",
      "get_siblings",
      "has_edge",
      "has_node",
      "hierarchical_drawing",
      "hierarchical_inference",
      "hierarchical_path",
      "hierarchy_balance",
      "hierarchy_metrics",
      "hits",
      "incidence_matrix",
      "induced_subgraph",
      "infer_relationships",
      "intersection_graph",
      "is_connected",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "level_based_positioning",
      "level_based_reasoning",
      "level_distance",
      "level_distribution",
      "line_graph",
      "max_depth",
      "max_flow",
      "min_cut",
      "minimum_spanning_tree",
      "modularity",
      "move_entity_to_level",
      "named_entity_recognition",
      "navigate_across",
      "navigate_down",
      "navigate_up",
      "nearest_neighbors",
      "neighbors",
      "node_degree",
      "nodes",
      "num_edges",
      "num_nodes",
      "ontology_alignment",
      "ontology_reasoning",
      "optimize_hierarchy",
      "pagerank",
      "pattern_matching",
      "pos",
      "predecessors",
      "property_hierarchy",
      "query_at_level",
      "query_cypher",
      "query_sparql",
      "radial_layout",
      "relation_embeddings",
      "relation_extraction",
      "relationship_patterns",
      "remove_edge",
      "remove_entity",
      "remove_level",
      "remove_node",
      "remove_relationship",
      "roll_up_query",
      "rule_based_inference",
      "schema_matching",
      "semantic_distance",
      "semantic_search",
      "semantic_similarity",
      "shortest_path",
      "shortest_semantic_path",
      "similarity_search",
      "slice_hierarchy",
      "source_attribution",
      "spectral_clustering",
      "subgraph",
      "successors",
      "taxonomy_extraction",
      "temporal_query",
      "temporal_reasoning",
      "time_based_inference",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx",
      "track_lineage",
      "transitive_closure",
      "tree_layout",
      "uncertainty_reasoning",
      "update_entity",
      "update_relationship",
      "validate_ontology",
      "vector_search"
    ]
  },
  "Metagraph": {
    "existing": [
      "access_control",
      "add_edge",
      "add_lineage",
      "add_metadata",
      "add_node",
      "add_policy",
      "add_relationship",
      "adjacency_matrix",
      "all_shortest_paths",
      "analyze_temporal_patterns",
      "anomaly_detection",
      "api_management",
      "archive_entity",
      "audit_trail",
      "betweenness_centrality",
      "check_compliance",
      "check_entity_access",
      "cleanup",
      "clear",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "connected_components",
      "cost_tracking",
      "create_entity",
      "create_policy",
      "data_quality_rules",
      "degree_centrality",
      "delete_entity",
      "diameter",
      "edges",
      "eigenvector_centrality",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "get_comprehensive_stats",
      "get_entities",
      "get_entities_by_type",
      "get_entity",
      "get_layout_coordinates",
      "get_lineage",
      "get_metadata",
      "get_related_entities",
      "get_relationships",
      "get_statistics",
      "has_edge",
      "has_node",
      "impact_analysis",
      "incidence_matrix",
      "lineage_visualization",
      "modularity",
      "nodes",
      "num_edges",
      "num_nodes",
      "number_of_edges",
      "number_of_nodes",
      "pagerank",
      "quality_assessment",
      "quality_improvement",
      "quality_metrics",
      "quality_monitoring",
      "remove_edge",
      "remove_node",
      "save_all",
      "search_entities",
      "shortest_path",
      "spectral_clustering",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx",
      "update_entity"
    ],
    "missing": [
      "catalog_search",
      "change_tracking",
      "compute_costs",
      "connector_management",
      "copy",
      "cost_allocation",
      "cross_system_lineage",
      "dashboard_data",
      "data_classification",
      "data_flow_analysis",
      "data_freshness",
      "data_profiling",
      "dependency_mapping",
      "downstream_lineage",
      "draw",
      "dual_graph",
      "edge_cardinality",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "enforce_policy",
      "entity_versions",
      "federated_query",
      "gdpr_compliance",
      "generate_reports",
      "get_entity_history",
      "governance_reports",
      "hits",
      "induced_subgraph",
      "intersection_graph",
      "is_connected",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "line_graph",
      "max_flow",
      "metadata_search",
      "metadata_synchronization",
      "metadata_validation",
      "min_cut",
      "minimum_spanning_tree",
      "neighbors",
      "node_degree",
      "optimization_suggestions",
      "popularity_metrics",
      "pos",
      "predecessors",
      "privacy_controls",
      "quality_reporting",
      "recommendation_engine",
      "regulatory_reporting",
      "remove_metadata",
      "resource_utilization",
      "restore_entity",
      "retention_policy",
      "rollback",
      "root_cause_analysis",
      "schema_enforcement",
      "semantic_discovery",
      "similar_datasets",
      "snapshot_management",
      "storage_analytics",
      "subgraph",
      "successors",
      "system_integration",
      "temporal_queries",
      "time_travel",
      "trend_analysis",
      "update_metadata",
      "upstream_lineage",
      "usage_analytics",
      "usage_patterns",
      "usage_reports",
      "version_control"
    ],
    "expected": [
      "access_control",
      "add_edge",
      "add_lineage",
      "add_metadata",
      "add_node",
      "add_policy",
      "adjacency_matrix",
      "all_shortest_paths",
      "anomaly_detection",
      "api_management",
      "archive_entity",
      "audit_trail",
      "betweenness_centrality",
      "catalog_search",
      "change_tracking",
      "check_compliance",
      "clear",
      "closeness_centrality",
      "clustering_coefficient",
      "community_detection",
      "compute_costs",
      "connected_components",
      "connector_management",
      "copy",
      "cost_allocation",
      "cost_tracking",
      "create_entity",
      "cross_system_lineage",
      "dashboard_data",
      "data_classification",
      "data_flow_analysis",
      "data_freshness",
      "data_profiling",
      "data_quality_rules",
      "delete_entity",
      "dependency_mapping",
      "diameter",
      "downstream_lineage",
      "draw",
      "dual_graph",
      "edge_cardinality",
      "edge_degree",
      "edge_induced_subgraph",
      "edge_size",
      "edges",
      "eigenvector_centrality",
      "enforce_policy",
      "entity_versions",
      "federated_query",
      "from_gexf",
      "from_graphml",
      "from_json",
      "from_networkx",
      "gdpr_compliance",
      "generate_reports",
      "get_entity_history",
      "get_layout_coordinates",
      "get_lineage",
      "get_metadata",
      "get_statistics",
      "governance_reports",
      "has_edge",
      "has_node",
      "hits",
      "impact_analysis",
      "incidence_matrix",
      "induced_subgraph",
      "intersection_graph",
      "is_connected",
      "k_core_decomposition",
      "laplacian_matrix",
      "layout",
      "line_graph",
      "lineage_visualization",
      "max_flow",
      "metadata_search",
      "metadata_synchronization",
      "metadata_validation",
      "min_cut",
      "minimum_spanning_tree",
      "modularity",
      "neighbors",
      "node_degree",
      "nodes",
      "num_edges",
      "num_nodes",
      "optimization_suggestions",
      "pagerank",
      "popularity_metrics",
      "pos",
      "predecessors",
      "privacy_controls",
      "quality_assessment",
      "quality_improvement",
      "quality_metrics",
      "quality_monitoring",
      "quality_reporting",
      "recommendation_engine",
      "regulatory_reporting",
      "remove_edge",
      "remove_metadata",
      "remove_node",
      "resource_utilization",
      "restore_entity",
      "retention_policy",
      "rollback",
      "root_cause_analysis",
      "schema_enforcement",
      "semantic_discovery",
      "shortest_path",
      "similar_datasets",
      "snapshot_management",
      "spectral_clustering",
      "storage_analytics",
      "subgraph",
      "successors",
      "system_integration",
      "temporal_queries",
      "time_travel",
      "to_gexf",
      "to_graphml",
      "to_json",
      "to_networkx",
      "trend_analysis",
      "update_entity",
      "update_metadata",
      "upstream_lineage",
      "usage_analytics",
      "usage_patterns",
      "usage_reports",
      "version_control"
    ]
  }
}